# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-11-05 13:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BrewPiDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote_id', models.IntegerField()),
                ('name', models.CharField(blank=True, default='', help_text='Name for this device', max_length=48)),
                ('latest_temp_format', models.CharField(choices=[('C', 'Celsius'), ('F', 'Fahrenheit')], default='C', help_text='Temperature units', max_length=1)),
                ('latest_beer_temp', models.DecimalField(decimal_places=10, help_text='Latest temperature from the beer sensor', max_digits=13, null=True)),
                ('latest_fridge_temp', models.DecimalField(decimal_places=10, help_text='Latest temperature from the fridge sensor', max_digits=13, null=True)),
                ('latest_room_temp', models.DecimalField(decimal_places=10, help_text='Latest temperature from the room sensor', max_digits=13, null=True)),
                ('latest_control_mode', models.CharField(choices=[('u', 'Unknown'), ('o', 'Off'), ('b', 'Beer Constant'), ('f', 'Fridge Constant'), ('p', 'Beer Profile')], default='u', help_text='Current temperature control mode', max_length=1)),
                ('latest_gravity', models.DecimalField(decimal_places=3, help_text='Current specific gravity (if applicable)', max_digits=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GravitySensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote_id', models.IntegerField()),
                ('name', models.CharField(blank=True, default='', help_text='Name for this device', max_length=48)),
                ('sensor_type', models.CharField(choices=[('tilt', 'Tilt Hydrometer'), ('ispindel', 'iSpindel'), ('manual', 'Manual')], default='manual', help_text='Type of gravity sensor used', max_length=10)),
                ('latest_gravity', models.DecimalField(decimal_places=3, help_text='Current specific gravity', max_digits=4, null=True)),
                ('latest_temp', models.DecimalField(decimal_places=10, help_text='Latest temperature from the sensor', max_digits=13, null=True)),
                ('latest_temp_format', models.CharField(choices=[('C', 'Celsius'), ('F', 'Fahrenheit')], default='C', help_text='Temperature units', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='UpstreamFermentrackInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name for this data source', max_length=48, unique=True)),
                ('api_key', models.CharField(help_text='API key required to be provided by data source (optional)', max_length=256)),
                ('last_checked_in', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'verbose_name': 'Upstream Fermentrack Installation',
                'verbose_name_plural': 'Upstream Fermentrack Installations',
            },
        ),
        migrations.AddField(
            model_name='gravitysensor',
            name='fermentrack_install',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fermentrack_incoming.UpstreamFermentrackInstallation'),
        ),
        migrations.AddField(
            model_name='brewpidevice',
            name='fermentrack_install',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fermentrack_incoming.UpstreamFermentrackInstallation'),
        ),
    ]
